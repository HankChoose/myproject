worker_processes 1;
events { worker_connections 1024; }
http {
    sendfile on;
    upstream app_server {
        server myproject-backend:8000;
    }

    upstream react_server {
        server myproject-frontend:3000;
    }
	
  
    server {
        listen 80;
        server_name zhiyouyuec.com;
        
        root /app/;
        location /static/ {
            alias /app/static/;
            # 其他配置...
        }

        # Nginx代理到Django容器的地址
        location / {
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            client_max_body_size 10M;  # Set to an appropriate size (e.g., 20MB)
        }

        location /react {
            #rewrite ^/react(/.*)$ $1 break;
            proxy_pass http://react_server;  # 这里的名称需要与 Docker Compose 中的 React 容器的服务名称匹配
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade; 
        }
		
		# Added Office plugin demo path
		location /office-demo/ {
			proxy_pass http://office-demo:3001/;  # Proxy to the Office plugin service in a Docker container
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}



        return 301 https://$host$request_uri;
    }
    
    server {
        
        listen 443 ssl;
        server_name zhiyouyuec.com;
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        #ssl_certificate /etc/letsencrypt/live/zhiyouyuec.com/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/zhiyouyuec.com/privkey.pem;
        ssl_protocols TLSv1.2;
        
        root /app/;
        location /static/ {
            alias /app/static/;
            # 其他配置...
        }

        # Nginx代理到Django容器的地址
        location / {
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            client_max_body_size 10M;  # Set to an appropriate size (e.g., 20MB)
        }


        location /react {
            #rewrite ^/react(/.*)$ $1 break;
            proxy_pass http://react_server;  # 这里的名称需要与 Docker Compose 中的 React 容器的服务名称匹配
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;       
        }


        
      
    }
}